# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ifelse.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(QtWidgets.QMainWindow):
    def setupUi(self):
        self.setObjectName("Form")
        self.resize(654, 529)
        self.gridLayout = QtWidgets.QGridLayout(self)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidgetTextVariables = QtWidgets.QTabWidget(self)
        self.tabWidgetTextVariables.setObjectName("tabWidgetTextVariables")
        self.tab_welcome = QtWidgets.QWidget()
        self.tab_welcome.setObjectName("tab_welcome")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_welcome)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.TextEditWelcome = QtWidgets.QPlainTextEdit(self.tab_welcome)
        self.TextEditWelcome.setObjectName("TextEditWelcome")
        self.gridLayout_2.addWidget(self.TextEditWelcome, 2, 0, 1, 1)
        self.WelcomeImg = QtWidgets.QLabel(self.tab_welcome)
        self.WelcomeImg.setText("")
        self.WelcomeImg.setPixmap(QtGui.QPixmap(":/ifelse/article.jpg"))
        self.WelcomeImg.setObjectName("WelcomeImg")
        self.gridLayout_2.addWidget(self.WelcomeImg, 3, 0, 1, 1)
        self.tabWidgetTextVariables.addTab(self.tab_welcome, "")
        self.tab_if_jesli = QtWidgets.QWidget()
        self.tab_if_jesli.setObjectName("tab_if_jesli")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_if_jesli)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.IfImg = QtWidgets.QLabel(self.tab_if_jesli)
        self.IfImg.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.IfImg.sizePolicy().hasHeightForWidth())
        self.IfImg.setSizePolicy(sizePolicy)
        self.IfImg.setMinimumSize(QtCore.QSize(0, 200))
        self.IfImg.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.IfImg.setText("")
        self.IfImg.setPixmap(QtGui.QPixmap(":/ifelse/if.PNG"))
        self.IfImg.setObjectName("IfImg")
        self.gridLayout_3.addWidget(self.IfImg, 1, 0, 1, 1)
        self.TextEditIf = QtWidgets.QPlainTextEdit(self.tab_if_jesli)
        self.TextEditIf.setMinimumSize(QtCore.QSize(0, 260))
        self.TextEditIf.setObjectName("TextEditIf")
        self.gridLayout_3.addWidget(self.TextEditIf, 0, 0, 1, 1)
        self.tabWidgetTextVariables.addTab(self.tab_if_jesli, "")
        self.tab_else = QtWidgets.QWidget()
        self.tab_else.setObjectName("tab_else")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab_else)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.TextEditElse = QtWidgets.QPlainTextEdit(self.tab_else)
        self.TextEditElse.setMinimumSize(QtCore.QSize(0, 0))
        self.TextEditElse.setObjectName("TextEditElse")
        self.gridLayout_4.addWidget(self.TextEditElse, 0, 0, 1, 1)
        self.ElseImg = QtWidgets.QLabel(self.tab_else)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ElseImg.sizePolicy().hasHeightForWidth())
        self.ElseImg.setSizePolicy(sizePolicy)
        self.ElseImg.setMinimumSize(QtCore.QSize(0, 0))
        self.ElseImg.setMaximumSize(QtCore.QSize(16777215, 250))
        self.ElseImg.setText("")
        self.ElseImg.setPixmap(QtGui.QPixmap(":/ifelse/else.PNG"))
        self.ElseImg.setObjectName("ElseImg")
        self.gridLayout_4.addWidget(self.ElseImg, 1, 0, 1, 1)
        self.tabWidgetTextVariables.addTab(self.tab_else, "")
        self.tab_exercise1 = QtWidgets.QWidget()
        self.tab_exercise1.setObjectName("tab_exercise1")
        self.pushButtonExercise1 = QtWidgets.QPushButton(self.tab_exercise1)
        self.pushButtonExercise1.setGeometry(QtCore.QRect(230, 310, 131, 23))
        self.pushButtonExercise1.setObjectName("pushButtonExercise1")
        self.TextEditExercise1 = QtWidgets.QPlainTextEdit(self.tab_exercise1)
        self.TextEditExercise1.setGeometry(QtCore.QRect(120, 20, 401, 121))
        self.TextEditExercise1.setObjectName("TextEditExercise1")
        self.labelExercise1 = QtWidgets.QLabel(self.tab_exercise1)
        self.labelExercise1.setGeometry(QtCore.QRect(100, 350, 391, 41))
        self.labelExercise1.setText("")
        self.labelExercise1.setObjectName("labelExercise1")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.tab_exercise1)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(200, 160, 211, 131))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.radioButton = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radioButton.setObjectName("radioButton")
        self.verticalLayout.addWidget(self.radioButton)
        self.radioButton_2 = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radioButton_2.setObjectName("radioButton_2")
        self.verticalLayout.addWidget(self.radioButton_2)
        self.radioButton_3 = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radioButton_3.setObjectName("radioButton_3")
        self.verticalLayout.addWidget(self.radioButton_3)
        self.radioButton_4 = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radioButton_4.setObjectName("radioButton_4")
        self.verticalLayout.addWidget(self.radioButton_4)
        self.tabWidgetTextVariables.addTab(self.tab_exercise1, "")
        self.tab_conditions = QtWidgets.QWidget()
        self.tab_conditions.setObjectName("tab_conditions")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.tab_conditions)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.TextEditConditions = QtWidgets.QPlainTextEdit(self.tab_conditions)
        self.TextEditConditions.setMinimumSize(QtCore.QSize(0, 0))
        self.TextEditConditions.setObjectName("TextEditConditions")
        self.gridLayout_6.addWidget(self.TextEditConditions, 0, 0, 1, 1)
        self.ConditionsImg = QtWidgets.QLabel(self.tab_conditions)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConditionsImg.sizePolicy().hasHeightForWidth())
        self.ConditionsImg.setSizePolicy(sizePolicy)
        self.ConditionsImg.setMinimumSize(QtCore.QSize(0, 0))
        self.ConditionsImg.setMaximumSize(QtCore.QSize(16777215, 250))
        self.ConditionsImg.setText("")
        self.ConditionsImg.setPixmap(QtGui.QPixmap(":/ifelse/comparison.jpg"))
        self.ConditionsImg.setObjectName("ConditionsImg")
        self.gridLayout_6.addWidget(self.ConditionsImg, 1, 0, 1, 1)
        self.tabWidgetTextVariables.addTab(self.tab_conditions, "")
        self.tab_nested_if = QtWidgets.QWidget()
        self.tab_nested_if.setObjectName("tab_nested_if")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_nested_if)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.TextEditNestedIf = QtWidgets.QPlainTextEdit(self.tab_nested_if)
        self.TextEditNestedIf.setMinimumSize(QtCore.QSize(0, 0))
        self.TextEditNestedIf.setObjectName("TextEditNestedIf")
        self.gridLayout_5.addWidget(self.TextEditNestedIf, 0, 0, 1, 2)
        self.NestedIfImg = QtWidgets.QLabel(self.tab_nested_if)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.NestedIfImg.sizePolicy().hasHeightForWidth())
        self.NestedIfImg.setSizePolicy(sizePolicy)
        self.NestedIfImg.setMinimumSize(QtCore.QSize(0, 0))
        self.NestedIfImg.setMaximumSize(QtCore.QSize(16777215, 250))
        self.NestedIfImg.setText("")
        self.NestedIfImg.setPixmap(QtGui.QPixmap(":/ifelse/136-283006.jpg"))
        self.NestedIfImg.setObjectName("NestedIfImg")
        self.gridLayout_5.addWidget(self.NestedIfImg, 1, 0, 2, 2)
        self.tabWidgetTextVariables.addTab(self.tab_nested_if, "")
        self.tab_loop = QtWidgets.QWidget()
        self.tab_loop.setObjectName("tab_loop")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.tab_loop)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.LoopImg = QtWidgets.QLabel(self.tab_loop)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LoopImg.sizePolicy().hasHeightForWidth())
        self.LoopImg.setSizePolicy(sizePolicy)
        self.LoopImg.setMinimumSize(QtCore.QSize(0, 0))
        self.LoopImg.setMaximumSize(QtCore.QSize(16777215, 250))
        self.LoopImg.setText("")
        self.LoopImg.setPixmap(QtGui.QPixmap(":/ifelse/petla.png"))
        self.LoopImg.setObjectName("LoopImg")
        self.gridLayout_7.addWidget(self.LoopImg, 1, 0, 1, 1)
        self.TextEditLoop = QtWidgets.QPlainTextEdit(self.tab_loop)
        self.TextEditLoop.setMinimumSize(QtCore.QSize(0, 0))
        self.TextEditLoop.setObjectName("TextEditLoop")
        self.gridLayout_7.addWidget(self.TextEditLoop, 0, 0, 1, 1)
        self.tabWidgetTextVariables.addTab(self.tab_loop, "")
        self.tab_exercise2 = QtWidgets.QWidget()
        self.tab_exercise2.setObjectName("tab_exercise2")
        self.TextEditExercise2 = QtWidgets.QPlainTextEdit(self.tab_exercise2)
        self.TextEditExercise2.setGeometry(QtCore.QRect(100, 40, 391, 141))
        self.TextEditExercise2.setObjectName("TextEditExercise2")
        self.pushButtonExercise2 = QtWidgets.QPushButton(self.tab_exercise2)
        self.pushButtonExercise2.setGeometry(QtCore.QRect(220, 240, 75, 23))
        self.pushButtonExercise2.setObjectName("pushButtonExercise2")
        self.lineEditExercise2 = QtWidgets.QLineEdit(self.tab_exercise2)
        self.lineEditExercise2.setGeometry(QtCore.QRect(160, 200, 221, 20))
        self.lineEditExercise2.setObjectName("lineEditExercise2")
        self.labelExercise2 = QtWidgets.QLabel(self.tab_exercise2)
        self.labelExercise2.setGeometry(QtCore.QRect(90, 300, 381, 41))
        self.labelExercise2.setText("")
        self.labelExercise2.setObjectName("labelExercise2")
        self.tabWidgetTextVariables.addTab(self.tab_exercise2, "")
        self.gridLayout.addWidget(self.tabWidgetTextVariables, 0, 0, 1, 1)

        self.retranslateUi()
        self.tabWidgetTextVariables.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(self)
        self.setCentralWidget(self.tabWidgetTextVariables)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Form", "Różne ścieżki programu"))
        self.TextEditWelcome.setPlainText(_translate("Form", "Jak dotąd mieliśmy tylko możliwość wykonywania każdej z linijek po kolei. Lecz nie zawsze będziemy chcieli uzyskać taki efekt. Czasami będziemy chcieli sprawdzić czy w jakiejś zmiennej znajduje się dokładnie to, czego się spodziwaliśmy, a może chcemy sprawdzić czy wiek użytkownika jest odpowiedni. I w zależności od tego co tam zobaczymy, będziemy mogli podjąć różne decyzję.\n"
"\n"
"W tym rozdziale poznamy jak sprawdzać niektóre rzeczy i jak odpowiednio pokierować kodem programu w zależności czy jakiś warunek jest spełniony lub nie. \n"
"\n"
"Równie dobrze możemy mieć ochotę, aby jakieś linijki wykonać parę razy. Kopiuj wklej to jest jedna z możliwości. Nie jest to jednak rozwiązanie eleganckie i odradzałbym je z wielu powodów (drobna zmiana wymaga poprawienia wszystkich skopiowanych fragmentów, ciężko się odnaleźć we wszystkich tych linijkach i nie ma łatwego sposobu, aby policzyć ile razy dokładnie kod ma się wykonać). Podczas tej lekcji poznamy sposoby radzenia sobie z tym zagadnieniem."))
        self.tabWidgetTextVariables.setTabText(self.tabWidgetTextVariables.indexOf(self.tab_welcome), _translate("Form", "Gęsiego"))
        self.TextEditIf.setPlainText(_translate("Form", "Najprostszym sposobem na pokierowanie naszym kodem jest instrukcja \"if\". Oznacza ona w języku angielskim - jeśli. Dzięki niej będziemy sprawdzali pewne zdanie czy jest prawdziwe,  a następnie jeśli będzie to wykonamy jakiś fragment kodu, a jeśli nie to przejdziemy do kolejnych instrukcji. Przykładowy kod wyglądałby następująco:\n"
"\n"
"if 5 > 0:\n"
"    print(\'Liczba 5 to liczba dodatnia\')\n"
"\n"
"Powyższy fragment kodu możemy w następujący sposób zinterpretować - jeśli 5 jest większe od zera, wypisz do konsoli komunikat: \'Liczba 5 to liczba dodatnia\'. Przed instrukcją if i po niej może być dowolna liczba innych komend. Aby przekazać komputerowi, które instrukcję mają się wykonać po spełnieniu warunku wykorzystujemy wcięcia (tabulator lub 4 spacje). Ogólny konstrukcja zdań z if:\n"
"\n"
"if warunek:\n"
"   jeśli warunek prawdziwy, to ten kod się wykona\n"
"   ważne jest wcięcie\n"
"   może być więcej niż jedna linijka\n"
""))
        self.tabWidgetTextVariables.setTabText(self.tabWidgetTextVariables.indexOf(self.tab_if_jesli), _translate("Form", "if - jeśli"))
        self.TextEditElse.setPlainText(_translate("Form", "Else jest naturalnym rozszerzeniem if\'a. Else tłumaczymy jako - w przeciwnym wypadku. Jeśli warunek z ifa nie był prawdziwy, wykona się kod z elsa.\n"
"if ładna_pogoda:\n"
"   idę_na_spacer()\n"
"else:\n"
"    gram_na_konsoli()\n"
"\n"
"Jeśli jest ładna pogoda, to idę na spacer. W przeciwnym wypadku (pogoda nie jest ładna) gram na konsoli. Wcięcia wyglądają jak pokazane powyżej. Z elsem wracamy do lewej strony, a później jego instrukcję ponownie wymagają wcięcia. \n"
"Oczywiście przykład z pogodą jest nieprecyzyjny, ponieważ ciężko jednoznacznie określić czy pogoda jest ładna czy brzydka i dla różnych osób może oznaczać to różne rzeczy. W programowaniu nie ma tutaj miejsca na dwuznaczności. Wszystko musi być jasno zdefiniowane i mieć określone granice. Powyższy przykład służy tylko wyjaśnieniu przeznaczenia funkcji else. Ten poniżej będzie bardziej konkretny:\n"
"if wiek >= 18:\n"
"    print(\'Jesteś pełnoletni\')\n"
"else:\n"
"    print(\'Jesteś niepełnoletni\')\n"
"Wiek to określona liczba. Jedni będą mieli więcej niż 18 lat lub 18, a pozostali będą mieli mniej. Nie ma trzeciej opcji, a warunek łatwo sprawdzić."))
        self.tabWidgetTextVariables.setTabText(self.tabWidgetTextVariables.indexOf(self.tab_else), _translate("Form", "else"))
        self.pushButtonExercise1.setText(_translate("Form", "Sprawdź"))
        self.TextEditExercise1.setPlainText(_translate("Form", "Pierwsze zadanie!\n"
"Jak myślisz, co wypisze się do konsoli, po wykonaniu poniższego kodu:\n"
"predkosc = 120\n"
"if predkosc > 100:\n"
"    print(\'Dostajesz mandat!\')\n"
"else:\n"
"    print(\'Dobrze jeździsz\')\n"
"print(\'Życzę przyjemnej podróży\') "))
        self.radioButton.setText(_translate("Form", "Dostajesz mandat!"))
        self.radioButton_2.setText(_translate("Form", "Dobrze jeździsz"))
        self.radioButton_3.setText(_translate("Form", "Życzę przyjemnej podróży"))
        self.radioButton_4.setText(_translate("Form", "Dostajesz mandat!\n"
"Życzę przyjemnej podróży"))
        self.tabWidgetTextVariables.setTabText(self.tabWidgetTextVariables.indexOf(self.tab_exercise1), _translate("Form", "Zadanie 1"))
        self.TextEditConditions.setPlainText(_translate("Form", "Każdy z naszych if\'ów potrzebuje odpowiednich warunków, które musimy zdefiniować. Muszą to być łatwe do sprawdzenia przez komputer instrukcję, które mogą być prawdziwe lub fałszywe. Do wykorzystania mamy kilka operatorów, które ułatwią nam zadanie. Niektóre z nich możemy kojarzyć z matematyki:\n"
"\n"
"a == b (znak równości) - sprawdza czy oba elementy są równe\n"
"a != b (znak nierówności) - sprawdza czy są nierówne\n"
"a > b - sprawdza czy a jest większe od b\n"
"a < b - sprawdza czy a jest mniejsze od b\n"
"a >= b - sprawdza czy a jest większe bądź równe b\n"
"a <= b - sprawdza czy a jest mniejsze bądź równe b\n"
"not - na początku warunku zmienia jego wartość na przeciwną\n"
"\n"
"2 + 3 == 5 - to jest prawda. W informatyce wykorzystujemy dwa równa się do porównań. Jedno równa się stosujemy, gdy chcemy przypisać jakąś wartość do zmiennej (Patrz lekcja o zmiennych!).\n"
"Nie musimy porównać tylko liczb, równie dobrze możemy porównywać zmienne.\n"
"wiek = 18\n"
"if wiek == 18:\n"
"    print(\'Staję się dorosła. Tracę złudzenia, być może, by zyskać inne.\')"))
        self.tabWidgetTextVariables.setTabText(self.tabWidgetTextVariables.indexOf(self.tab_conditions), _translate("Form", "Warunki"))
        self.TextEditNestedIf.setPlainText(_translate("Form", "Czasami pojedyńcza instrukcja if nie wystarczy. Weźmy sobie za przykład kolejkę górską. Nie wystarczy iż osoba miała więcej niż 13 lat, może będzie też potrzebny określony wzrost, który zapewni jej bezpieczeństwo podczas przejazdu? Taki warunek moglibyśmy zapisać za pomocą następującego kodu:\n"
"if wiek > 13:\n"
"    if wzrost > 140:\n"
"        print(\'Możesz wchodzić\')\n"
"    else:\n"
"        print(\'Wiek masz odpowiedni, ale musisz jeszcze urosnąć\')\n"
"else:\n"
"    if wzrost > 140:\n"
"        print(\'Wzrost masz odpowiedni, ale musisz jeszcze dorosnąć\')\n"
"    else:\n"
"        print(\'Ani wiek, ani wzrost. Jeszcze nie czas na ciebie\')\n"
"Zauważmy że z każdym kolejnym if\'em przesuwamy się o kolejne wcięcia w prawo. Wracamy w lewo gdy kończymy if\'a lub else."))
        self.tabWidgetTextVariables.setTabText(self.tabWidgetTextVariables.indexOf(self.tab_nested_if), _translate("Form", "Zagnieżdżone if"))
        self.TextEditLoop.setPlainText(_translate("Form", "Innym przykładem zmiany kolejności wykonywania instrukcji jest pętla. Programiści często muszą wykonywać jakąś cześć kodu kilka razy pod rząd. Kopiowanie i wklejanie powtarzających się fragmentów jest jednym sposobem na rozwiązanie takiego problemu, lecz pozostawia dużą niedogodność w momencie, gdy zapragniemy dokonać jakiejkolwiek zmianny. Wyobraźmy sobie taką sytuację:\n"
"print(\'Przeliaczm\')\n"
"print(\'Przeliaczm\')\n"
"print(\'Przeliaczm\')\n"
"...\n"
"Mogłoby się zdarzyć, że w momencie kopiowania nie zauważylibyśmy, że popełniliśmy literówkę. Poprawienie tego kodu wymagałoby zmianę w każdej linijce z osobna. Nie jest to wygodne i isnieje szansa, że gdzieś nie poprawimy tego błędu albo gdzieś indziej znów popełnimy literówkę. Kolejnym minusem takie rozwiązania jest zmuszanie nas do liczenia linijek kodu, jeśli chcemy aby dane słowo wypisało się określoną ilość razy.\n"
"Z pomocą przychodzą nam pętle. Pozwalają na wykonanie się określonych komend określoną ilość razy:\n"
"for i in range(100):\n"
"    print(\'Przeliczam\')\n"
"Powyższa pętla wykona się 100 razy, wypisując do konsoli słowo \'Przeliczam\' za każdym razem. Zmianę słowa wystarczy wykonać w jednym miejscu i od razu mamy pewność ile razy wykona się dana pętla."))
        self.tabWidgetTextVariables.setTabText(self.tabWidgetTextVariables.indexOf(self.tab_loop), _translate("Form", "Pętla"))
        self.TextEditExercise2.setPlainText(_translate("Form", "Drugie zadanie!\n"
"Jaką liczbę zwróci do konsoli następujący kod:\n"
"\n"
"a = 0\n"
"for i in range(4):\n"
"    if (a%2 == 0):\n"
"        a = a + 1\n"
"    else:\n"
"        a = a + 3\n"
"print(a)"))
        self.pushButtonExercise2.setText(_translate("Form", "Sprawdź"))
        self.tabWidgetTextVariables.setTabText(self.tabWidgetTextVariables.indexOf(self.tab_exercise2), _translate("Form", "Zadanie 2"))
import obrazki.obrazki_ifelse
