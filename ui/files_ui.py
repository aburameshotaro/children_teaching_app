# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'files.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(QtWidgets.QMainWindow):
    def setupUi(self):
        self.setObjectName("Form")
        self.resize(654, 494)
        self.gridLayout = QtWidgets.QGridLayout(self)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidgetFiles = QtWidgets.QTabWidget(self)
        self.tabWidgetFiles.setObjectName("tabWidgetFiles")
        self.tab_welcome = QtWidgets.QWidget()
        self.tab_welcome.setObjectName("tab_welcome")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_welcome)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.TextEditWelcome = QtWidgets.QPlainTextEdit(self.tab_welcome)
        self.TextEditWelcome.setObjectName("TextEditWelcome")
        self.gridLayout_2.addWidget(self.TextEditWelcome, 2, 0, 1, 1)
        self.WelcomeImg = QtWidgets.QLabel(self.tab_welcome)
        self.WelcomeImg.setText("")
        self.WelcomeImg.setPixmap(QtGui.QPixmap(":/files/umysł-i-ciało.png"))
        self.WelcomeImg.setObjectName("WelcomeImg")
        self.gridLayout_2.addWidget(self.WelcomeImg, 3, 0, 1, 1)
        self.tabWidgetFiles.addTab(self.tab_welcome, "")
        self.tab_with_open = QtWidgets.QWidget()
        self.tab_with_open.setObjectName("tab_with_open")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_with_open)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.WithOpenImg = QtWidgets.QLabel(self.tab_with_open)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.WithOpenImg.sizePolicy().hasHeightForWidth())
        self.WithOpenImg.setSizePolicy(sizePolicy)
        self.WithOpenImg.setMinimumSize(QtCore.QSize(0, 200))
        self.WithOpenImg.setMaximumSize(QtCore.QSize(600, 220))
        self.WithOpenImg.setText("")
        self.WithOpenImg.setPixmap(QtGui.QPixmap(":/files/maxresdefault.jpg"))
        self.WithOpenImg.setObjectName("WithOpenImg")
        self.gridLayout_3.addWidget(self.WithOpenImg, 1, 0, 1, 1)
        self.TextEditWithOpen = QtWidgets.QPlainTextEdit(self.tab_with_open)
        self.TextEditWithOpen.setMinimumSize(QtCore.QSize(0, 188))
        self.TextEditWithOpen.setObjectName("TextEditWithOpen")
        self.gridLayout_3.addWidget(self.TextEditWithOpen, 0, 0, 1, 1)
        self.tabWidgetFiles.addTab(self.tab_with_open, "")
        self.tab_write = QtWidgets.QWidget()
        self.tab_write.setObjectName("tab_write")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab_write)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.TextEditWrite = QtWidgets.QPlainTextEdit(self.tab_write)
        self.TextEditWrite.setMinimumSize(QtCore.QSize(0, 0))
        self.TextEditWrite.setObjectName("TextEditWrite")
        self.gridLayout_4.addWidget(self.TextEditWrite, 0, 0, 1, 1)
        self.WriteImg = QtWidgets.QLabel(self.tab_write)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.WriteImg.sizePolicy().hasHeightForWidth())
        self.WriteImg.setSizePolicy(sizePolicy)
        self.WriteImg.setMinimumSize(QtCore.QSize(0, 0))
        self.WriteImg.setMaximumSize(QtCore.QSize(16777215, 250))
        self.WriteImg.setText("")
        self.WriteImg.setPixmap(QtGui.QPixmap(":/files/writing.jpg"))
        self.WriteImg.setObjectName("WriteImg")
        self.gridLayout_4.addWidget(self.WriteImg, 1, 0, 1, 1)
        self.tabWidgetFiles.addTab(self.tab_write, "")
        self.tab_exercise1 = QtWidgets.QWidget()
        self.tab_exercise1.setObjectName("tab_exercise1")
        self.pushButtonExercise1 = QtWidgets.QPushButton(self.tab_exercise1)
        self.pushButtonExercise1.setGeometry(QtCore.QRect(220, 240, 131, 23))
        self.pushButtonExercise1.setObjectName("pushButtonExercise1")
        self.TextEditExercise1 = QtWidgets.QPlainTextEdit(self.tab_exercise1)
        self.TextEditExercise1.setGeometry(QtCore.QRect(90, 40, 401, 121))
        self.TextEditExercise1.setObjectName("TextEditExercise1")
        self.labelExercise1 = QtWidgets.QLabel(self.tab_exercise1)
        self.labelExercise1.setGeometry(QtCore.QRect(70, 300, 411, 41))
        self.labelExercise1.setText("")
        self.labelExercise1.setObjectName("labelExercise1")
        self.lineEditExercise1 = QtWidgets.QLineEdit(self.tab_exercise1)
        self.lineEditExercise1.setGeometry(QtCore.QRect(110, 190, 341, 20))
        self.lineEditExercise1.setObjectName("lineEditExercise1")
        self.tabWidgetFiles.addTab(self.tab_exercise1, "")
        self.tab_csv = QtWidgets.QWidget()
        self.tab_csv.setObjectName("tab_csv")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.tab_csv)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.TextEditCsv = QtWidgets.QPlainTextEdit(self.tab_csv)
        self.TextEditCsv.setMinimumSize(QtCore.QSize(0, 0))
        self.TextEditCsv.setObjectName("TextEditCsv")
        self.gridLayout_6.addWidget(self.TextEditCsv, 0, 0, 1, 1)
        self.CsvImg = QtWidgets.QLabel(self.tab_csv)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CsvImg.sizePolicy().hasHeightForWidth())
        self.CsvImg.setSizePolicy(sizePolicy)
        self.CsvImg.setMinimumSize(QtCore.QSize(0, 0))
        self.CsvImg.setMaximumSize(QtCore.QSize(16777215, 250))
        self.CsvImg.setText("")
        self.CsvImg.setPixmap(QtGui.QPixmap(":/files/csv.jpg"))
        self.CsvImg.setObjectName("CsvImg")
        self.gridLayout_6.addWidget(self.CsvImg, 1, 0, 1, 1)
        self.tabWidgetFiles.addTab(self.tab_csv, "")
        self.gridLayout.addWidget(self.tabWidgetFiles, 0, 0, 1, 1)

        self.retranslateUi()
        self.tabWidgetFiles.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(self)
        self.setCentralWidget(self.tabWidgetFiles)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Form", "Pliki"))
        self.TextEditWelcome.setPlainText(_translate("Form", "Kolejną umiejętnością jaką się nauczymy będzie korzystanie z plików. Pliki odgrywają ważną rolę w programowaniu. Nauczymy się tutaj wyłącznie o tych najprostszych plikach, plikach tekstowych.\n"
"\n"
"Jeśli zmienne można porównać do pamięci krótkotrwałej, to pliki tekstowe można porównać do pamięci długotrwałej komputera. Zmienne po wyłączeniu programu się kasują. Przy każdym uruchomieniu wszystkie zmienne są restartowane. Tak samo dwa programy nie mogą wymieniać się informacjami ze zmiennych. \n"
"\n"
"Pliki mogą nam posłużyć do tworzenia logów - informacji o wszystkim co się dzieje w naszym programie. Mogą też być wykorzystane do zapamiętania postępu jaki ktoś wykonał czy to w naszej apce do nauki czy też w grze. \n"
"\n"
"W pliku mogą znajdować się też informacje przekazane nam przez inny program, z których będziemy musieli skorzystać. Liczba możliwych zastosowań jest ogromna. Mam nadzieję, że każdy potrafi sobie wyobrazić, że jest to ważny temat."))
        self.tabWidgetFiles.setTabText(self.tabWidgetFiles.indexOf(self.tab_welcome), _translate("Form", "Obsługa plików"))
        self.TextEditWithOpen.setPlainText(_translate("Form", "Korzystanie z plików wymaga otwierania i zamykania ich. W programowaniu tak samo. Poniższy sposób pozwala na korzystanie ich bez pamiętania o zamykaniu:\n"
"\n"
"with open(\'sciezka_do_pliku.txt\', \'r\') as f:\n"
"    lines = f.readlines()\n"
"\n"
"\'sciezka_do_pliku.txt\' - to albo pełna ścieżka do pliku albo nazwa pliku, który znajduje się w tym samym folderze co nasz program.\n"
"\'r\' - to cel w jakim otwieramy nasz plik:\n"
"    \'r\' - oznacza read czyli czytanie z pliku. \n"
"    \'w\'- oznacza write czyli pisanie do pliku, każde takie otwarcie nadpisuje poprzednią zawartość pliku\n"
"    \'a\' - oznacz append czyli dopisywanie do pliku\n"
"f - nazwa zmiennej plikowej, którą będziemy wykorzystywać do korzystania z pliku\n"
"lines - zmienna zawierająca listę linijek z pliku tekstowego, każdy element listy to osobna linijka\n"
"f.readlines() - czyta całą zawartość pliku, każda linijka w osobnym elemencie listy"))
        self.tabWidgetFiles.setTabText(self.tabWidgetFiles.indexOf(self.tab_with_open), _translate("Form", "with open"))
        self.TextEditWrite.setPlainText(_translate("Form", "Na wcześniejszej zakładce nauczyliśmy się przy okazji odczytywać z pliku. Teraz dowiemy się parę szczegółów o zapisywaniu do pliku. Również musimy otworzyć plik w bardzo podobny sposób:\n"
"\n"
"with open(\'nazwa_pliku.txt\', \'w\') as f:\n"
"    f.write(\'Jakis tekst\')\n"
"\n"
"Powyższa metoda f.write(\"\")- pozwoli na zapisanie jakiegoś tekstu do pliku, zmiennej tekstowej. Aby zrobić nową linię w ten sposób będziemy potrzebowali napisać to tak: f.write(\"\\n\"). \n"
"\'\\n\' - oznacza w programowaniu nową linię\n"
"\n"
"Kolejny sposób na napisanie kilku linijek na raz:\n"
"\n"
"lines = [\'Pierwsza część\', \'Druga część\', \'Trzecia\']\n"
"with open(\'nazwa_pliku.txt, \'w\') as f:\n"
"    f.writelines(lines)\n"
"\n"
"Każdy z elementów listy będzie napisany w tej samej linijce. Jeśli chcemy, żeby każdy z nich pojawił się w osobnej, trzeba byłoby zapisać do pliku f.write(\'\\n\'.join(lines)) - wtedy każda z linii byłaby odgrodzona znakiem nowej linii."))
        self.tabWidgetFiles.setTabText(self.tabWidgetFiles.indexOf(self.tab_write), _translate("Form", "Zapisywanie"))
        self.pushButtonExercise1.setText(_translate("Form", "Sprawdź"))
        self.TextEditExercise1.setPlainText(_translate("Form", "Pierwsze zadanie!\n"
"Otworzyłem dla ciebie plik tekstowy o nazwie: \'Zadanie_Z_Plikow.txt\' za pomocą komendy:\n"
"\n"
"with open (\'Zadanie_Z_Plikow.txt\', \'w\') as f:\n"
"    tu_twoj_kod()\n"
"\n"
"Spróbuj zamienić linijkę tu_twoj_kod(), aby zapisać coś do pliku."))
        self.tabWidgetFiles.setTabText(self.tabWidgetFiles.indexOf(self.tab_exercise1), _translate("Form", "Zadanie 1"))
        self.TextEditCsv.setPlainText(_translate("Form", "Dane w plikach tekstowych mogą być przechowywane w różnych formatach, tzn. że przechowujemy je w różny sposób. W każdym z naszych programów możemy wymyślić sobie jakiś własny sposób przechowywania informacji. Możemy pisać każdą kolejną informację od nowej linijki:\n"
"Słońce jest gorące\n"
"Lód jest zimny\n"
"\n"
"Możemy też skorzystać jeden z popularnych formatów plików. Jednym z nich jest CSV (comma-separated values). Dane tam oddzielone są przecinkiem, a każda kolejna informacja jest od nowej linijki. Pierwsza linijka zazwyczaj wyjaśnia nazwy kolumn.\n"
"Przykład:\n"
"Przedmiot, temperatura\n"
"słońce, gorący\n"
"lód, zimny\n"
"\n"
"Isnieją również inne typy takie jak json lub xml, lecz nie będziemy sobie zawracali wszystkimi nimi głowy na samym początku naszej przygody z programowaniem."))
        self.tabWidgetFiles.setTabText(self.tabWidgetFiles.indexOf(self.tab_csv), _translate("Form", "csv"))
import obrazki.obrazki_files
